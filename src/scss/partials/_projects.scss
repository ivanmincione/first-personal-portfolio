#project-section{
    h1 {
        text-align: center;
        font-size: $fontSize * 2;
        color: $colorGreenLight;
        margin-bottom: $spacing * 2;

        @media screen and (max-width: 650px ) {
            font-size: $fontSize;
        }
    }
}

.illustration .inner img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 20px;

    @media only screen and (max-width: 400px) {
        width: 80%;
    }
}
// Generate different colors for slides
@mixin color_render($DC, $LC) {
    background-color: $DC;
    .illustration .inner {
        background-color: $LC;
        &::after, &::before{
            background-color: rgba($LC, .4);
            z-index: -1}
    }

    button {background-color: $LC;}
}

.container {
    position: relative;
    overflow: hidden;

    @media only screen and (max-width: 1000px) {
        border-radius: 0;
    }
}

.slider {
    display: flex;
    width: 500%;
    height: 100%;
    transition: all .25s ease-in;
    transform: translateX(0);
    margin-bottom: $spacing * 2;
    border-radius: 50px;

    @media only screen and (max-width: 1000px) {
        height: 100vh;
    }

    .box {
        height: 80%;
        width: 100%;
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        align-items: center;
        overflow: hidden;
        position: relative;
        padding: $spacing;
        border-radius: 50px;

        @media only screen and (max-width: 650px) {
            grid-template-columns: 1fr;
            grid-template-rows: repeat(2, 1fr);
        }
        @media only screen and (max-width: 400px) {
            padding: 0;
        }

        .bg {
            background-color: rgba($black, .3);
            width: 55%;
            transform: skewX(7deg);
            position: absolute;
            height: 100%;
            left: -10%;
            transform-origin: 0 100%;

            @media only screen and (max-width: 800px) {
                width: 65%;
            }

            @media only screen and (max-width: 650px) {
                width: 100%;
                left: 0;
                bottom: 0;
                height: 54%;
                transform: skewX(0deg);
            }
            @media only screen and (max-width: 400px) {
                display: none;
            }

            &::before {
                content: "";
                width: 100%;
                height: 100%;
                position: absolute;
                left: 0;
                top: 0;
                background-color: inherit;
                pointer-events: none;
                transform: skewX(10deg);

                @media only screen and (max-width: 650px) {
                    width: 120%;
                    bottom: 0;
                    transform: skewX(0deg);
                }
            }
        }

        .details {
            padding: $spacing;
            z-index: 100;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;

            @media only screen and (max-width: 650px) {
                padding: 0;
            }

            h1 {
                font-size: $fontSize * 1.5;
                font-weight: 500;
                margin-bottom: $spacing / 4;

                @media only screen and (max-width: 650px) {
                    margin-top: $spacing;
                }
            }

            p {
                display: inline-block;
                font-size: $fontSize;
                color: $grey;
                margin-bottom: $spacing / 2;
                text-align: center;

                @media only screen and (max-width: 800px) {
                    margin-right: 0;
                }

                @media only screen and (max-width: 650px) {
                    display: none;
                }
            }

            button {
                padding: $spacing / 2 $spacing;
                color: $white;
                border-radius: 10px;
                outline: none;
                border: none;
                cursor: pointer;
                transition: all .3s ease;

                &:hover {opacity: .8;}

                &:focus {
                    outline: none;
                    border: none;
                }

                a{
                    color: $white;
                    font-size: $fontSize;

                    &:hover{
                        color: $colorGreen;
                    }
                }

                @media only screen and (max-width: 650px) {
                    padding: 5px;
                }
            }
        }
    }

    .box1 {@include color_render($b1cd, $b1cl)}
    .box2 {@include color_render($b2cd, $b2cl)}
    .box3 {@include color_render($b3cd, $b3cl)}
    .box4 {@include color_render($b4cd, $b4cl)}
    .box5 {@include color_render($b5cd, $b5cl)}

    .illustration {
        grid-column: 2 / -1;
        grid-row: 1 / -1;
        justify-self: center;

        @media only screen and (max-width: 650px) {
            grid-row: 1 / span 1;
            grid-column: 1 / -1;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        div {
            height: 25rem;
            width: 18rem;
            border-radius: 3rem;
            background-color: $b1cl;
            position: relative;
            transform: skewX(-10deg);

            @media only screen and (max-width: 800px) {
                height: 20rem;
                width: 15rem;
            }

            &::after,
            &::before {
                content: "";
                position: absolute;
                height: 100%;
                width: 100%;
                border-radius: 3rem;
                top: 0;
                left: 0;
            }

            &::after {transform: translate(4rem, -1rem);}
            &::before {transform: translate(2rem, -2rem);}
        }
    }
}

.prev,
.next,
.trail {
    z-index: 10000;
    position: absolute;
}

.prev,
.next {
    width: 4rem;
    cursor: pointer;
    opacity: .2;
    transition: all .3s ease;

    @media only screen and (max-width: 650px) {
       display: none;
    }

    &:hover { opacity: 1;}
}

.prev {
    top: 50%;
    left: 2%;
    transform: translateY(-50%);
}

.next {
    top: 50%;
    right: 2%;
    transform: translateY(-50%);
}

.trail {
    bottom: 5%;
    left: 50%;
    transform: translateX(-50%);
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: 1rem;
    text-align: center;
    font-size: 1.5rem;
    margin-bottom: $spacing * 4;

    @media only screen and (max-width: 650px) {
        bottom: 20%;
    }

    div {
        padding: 2rem;
        border-top: 3px solid #fff;
        cursor: pointer;
        opacity: .3;
        transition: all 0.3s ease;

        &:hover {opacity: .6;}

        @media only screen and (max-width: 650px) {
            padding: 0;
        }
    }
}

.active {
    opacity: 1 !important;
}

// ----------Git profile -----------------

.profile-git{
    padding-top: $spacing * 5;
    text-align: center;

    a{

        i{
            font-size: $fontSize * 4;
            color: $colorGreenLight;
        }
    }

    p{
        text-align: center;
        color: $colorGreenLight;
        margin-top: $spacing / 2;
    }
}
